name: Build and Release Go Binaries

on:
    push:
        tags:
        - "v*"

permissions:
    contents: write

jobs:
    build:
        name: Build binaries
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                - goos: linux
                  goarch: amd64
                - goos: linux
                  goarch: arm64
                - goos: darwin
                  goarch: arm64
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Go
          uses: actions/setup-go@v5
          with:
              go-version: "1.23"

        - name: Build binary
          run: |
              mkdir -p dist
              BIN_NAME=iptables-parser-${{ matrix.goos }}-${{ matrix.goarch }}
              GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
                go build -o dist/$BIN_NAME

        - name: Upload binary artifact
          uses: actions/upload-artifact@v4
          with:
              name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
              path: dist/*

    release:
        name: Create GitHub Release
        needs: build
        runs-on: ubuntu-latest
        steps:
        - name: Download all artifacts
          uses: actions/download-artifact@v4
          with:
              path: dist

        - name: Flatten artifact directories
          run: |
              mkdir -p release
              find dist -type f -exec mv {} release/ \;
              ls -lh release

        - name: Rename binaries with tag
          run: |
              TAG="${GITHUB_REF_NAME}"   # e.g. v1.0.0
              for f in release/*; do
                base=$(basename $f)
                mv "$f" "release/${base}-${TAG}"
              done
              ls -lh release

        - name: Create Release
          uses: softprops/action-gh-release@v2
          with:
              files: release/*
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
